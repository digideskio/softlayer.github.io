<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Deprecated on SoftLayer API Examples </title>
    <link>https://softlayer.github.io/tags/deprecated/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 01 Sep 2014 00:00:00 UTC</updated>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://softlayer.github.io/python/create_server_from_template/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/python/create_server_from_template/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer.API

from pprint import pprint as pp

apiUsername = &#39;&#39;
apiKey = &#39;&#39;
templateId = 

client = SoftLayer.API.Client(&#39;SoftLayer_Product_Order&#39;, None, apiUsername, apiKey)

order = {
    &#39;complexType&#39;: &#39;SoftLayer_Container_Product_Order_Virtual_Guest&#39;,
    &#39;quantity&#39;: 1,
    &#39;virtualGuests&#39;: [
        {&#39;hostname&#39;: &#39;test&#39;, &#39;domain&#39;: &#39;example.com&#39;}
    ],
    &#39;location&#39;: 168642,  # San Jose 1
    &#39;packageId&#39;: 46,  # CCI Package
    &#39;prices&#39;: [
        {&#39;id&#39;: 1640},  # 1 x 2.0 GHz Core
        {&#39;id&#39;: 1644},  # 1 GB RAM
        {&#39;id&#39;:  905},  # Reboot / Remote Console
        {&#39;id&#39;:  272},  # 10 Mbps Public &amp;amp; Private Networks
        {&#39;id&#39;:  613},  # 1000 GB Bandwidth
        {&#39;id&#39;:   21},  # 1 IP Address
        {&#39;id&#39;: 2202},  # 25 GB (SAN)
        {&#39;id&#39;: 1684},  # CentOS 5 - Minimal Install (32 bit)
        {&#39;id&#39;:   55},  # Host Ping Monitoring
        {&#39;id&#39;:   57},  # Email and Ticket Notifications
        {&#39;id&#39;:   58},  # Automated Notification Response
        {&#39;id&#39;:  420},  # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account
        {&#39;id&#39;:  418},  # Nessus Vulnerability Assessment &amp;amp; Reporting
    ],
    &#39;imageTemplateId&#39;: templateId
}

result = client.verifyOrder(order)
pp(result)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel software licenses by IP</title>
      <link>https://softlayer.github.io/perl/cancel_by_license/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>https://softlayer.github.io/perl/cancel_by_license/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin perl
use warnings;
use strict;
use Data::Dumper;
use SoftLayer::API::SOAP;

my $api_username = &#39;&#39;;
my $api_key = &#39;&#39;;

my $cPanelIp = &#39;127.0.0.1&#39;;
my $billingItemId;
my $accountId;

my $accountClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);
my $billingClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Billing_Item_Cancellation_Request&#39;, undef, $api_username, $api_key);

my $objectMask = &amp;quot;mask.billingItem.id&amp;quot;;
$accountClient-&amp;gt;setObjectMask($objectMask);

my $licenses = $accountClient-&amp;gt;getActiveVirtualLicenses()-&amp;gt;result;

for my $i (0 .. $#{$licenses}) {
    my $license = $licenses-&amp;gt;[$i];
    if ($cPanelIp eq $license-&amp;gt;{&#39;ipAddress&#39;}) {
        $billingItemId = $license-&amp;gt;{&#39;billingItem&#39;}-&amp;gt;{&#39;id&#39;};
        $accountId = $license-&amp;gt;{&#39;accountId&#39;};
    }
}

my $cancellationRequestTemplateObject = {
    &#39;items&#39; =&amp;gt; [
            {
                &#39;billingItemId&#39; =&amp;gt; $billingItemId,
            }
    ],
    &#39;accountId&#39; =&amp;gt; $accountId
};

my $result = $billingClient-&amp;gt;createObject($cancellationRequestTemplateObject);
print Dumper($result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>